{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/Monster.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","Monster","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterMonsters","filter","toLowerCase","includes","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAIaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAKN,EAAMI,QAAQG,aCFdC,G,MAAW,SAACR,GAEvB,OADES,QAAQC,IAAIV,GACN,qBAAKC,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACd,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCN1BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACtB,uBACEd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCDG,E,kDAtCX,aAAe,IAAD,8BACV,gBAaJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAQnC,IAAD,EAE8BC,KAAKN,MAAhCH,EAFH,EAEGA,YACFU,EAHD,EAEiBpB,SACUqB,QAAO,SAAA5B,GAAO,OAC3CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAEnD,OACI,sBAAKhC,UAAU,YAAf,UACA,kDACA,cAAC,EAAD,CACGa,YAAY,kBACZC,aAAce,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAnCVI,IAAMC,WCUbC,MAVf,WACE,OACE,qBAAKpC,UAAU,MAAf,SAEG,8BAAK,cAAC,EAAD,SCEGqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eab8a09c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n        <h2 > {props.monster.name} </h2>\r\n        <p>{ props.monster.email}</p>\r\n    </div>\r\n\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props)\r\n  return (<div className=\"card-list\">\r\n       {props.monsters.map(monster => (\r\n                    <Card  key={monster.id} monster={ monster }/>\r\n                ))}\r\n  </div>)\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport  const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\" \r\n      placeholder={placeholder} \r\n      onChange={handleChange}\r\n    />\r\n)","import React from 'react';\r\n\r\nimport { CardList } from './card-list/card-list.component.jsx';\r\nimport { SearchBox } from './search-box/search-box.component.jsx';\r\nimport './../../src/App.css';\r\n\r\nclass Monster extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monsters: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json()) // in first res we reach all property of res and we format that to json\r\n        .then(users => this.setState({ monsters: users }))\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ searchField: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { searchField , monsters } = this.state;\r\n        const filterMonsters = monsters.filter(monster => \r\n           monster.name.toLowerCase().includes(searchField.toLowerCase()) \r\n            )\r\n        return (\r\n            <div className=\"container\">\r\n            <h1>Monsters Rolodex</h1>\r\n            <SearchBox \r\n               placeholder=\"search monsters\"\r\n               handleChange={this.handleChange}\r\n            />    \r\n            <CardList monsters={filterMonsters} /> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Monster;","\n\nimport './App.css';\nimport Monster from './components/Monster.jsx';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n       <div><Monster /></div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}